{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Desktop\\\\React\\\\social-network\\\\client\\\\src\\\\components\\\\Post\\\\post.js\",\n    _s = $RefreshSig$();\n\nimport \"./post.css\";\nimport { AiOutlineHeart, AiOutlineSend } from \"react-icons/ai\";\nimport { FaRegCommentAlt } from \"react-icons/fa\";\nimport { IoMdClose } from \"react-icons/io\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post({\n  post,\n  user,\n  dispatch\n}, props) {\n  _s();\n\n  let single_post;\n  const [likeTrigger, setLikeTrigger] = useState(false);\n  const [comment, setComment] = useState();\n  dispatch = useDispatch();\n\n  if (!post) {\n    axios.post(\"/api/posts/getpost\", {\n      postid: \"61154bb9c115b226b8d762bc\"\n    }).then(res => {\n      single_post = res.data;\n    });\n    const token = localStorage.getItem(\"token\");\n    user = token.user;\n  }\n\n  function postComment() {\n    if (typeof comment === \"string\" && comment.length > 0) {\n      let commObj = {\n        postid: single_post._id,\n        user: user.user,\n        comment: comment,\n        date: Date.now()\n      };\n      dispatch({\n        type: \"ADDCOMMENT\",\n        payload: commObj\n      });\n      axios.put(\"/api/posts/postcomment\", commObj);\n      setComment(\"\");\n    }\n  }\n\n  function deleteComment(comm) {\n    dispatch({\n      type: \"DELETECOMMENT\",\n      payload: comm\n    });\n    axios.put(\"/api/posts/deletecomment\", comm);\n    setCommentToggle(false);\n  }\n\n  function like(postid) {\n    let a = single_post.likes.find(id => id === user.user._id);\n\n    if (!a) {\n      axios.put(\"/api/posts/like\", {\n        postid: postid,\n        userid: user.user._id\n      });\n      dispatch({\n        type: \"LIKE\",\n        payload: {\n          userid: user.user._id,\n          postid: postid\n        }\n      });\n      setLikeTrigger(!likeTrigger);\n    } else {\n      axios.put(\"/api/posts/unlike\", {\n        postid: postid,\n        userid: user.user._id\n      });\n      dispatch({\n        type: \"UNLIKE\",\n        payload: {\n          postid: postid,\n          userid: user.user._id\n        }\n      });\n      setLikeTrigger(!likeTrigger);\n    }\n  }\n\n  const [commentToggle, setCommentToggle] = useState(false);\n  const commentsStyle = useSpring(commentToggle ? {\n    display: \"block\"\n  } : {\n    display: \"none\"\n  });\n  let postUser = JSON.parse(single_post.user);\n  let updatedPosts = useSelector(store => store.posts);\n  let singlePost = updatedPosts.find(photo => photo._id === single_post._id);\n  const userPhoto = JSON.parse(single_post.user);\n  console.log(userPhoto);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(animated.div, {\n      className: \"all-comments\",\n      style: commentsStyle,\n      children: [/*#__PURE__*/_jsxDEV(IoMdClose, {\n        size: \"32px\",\n        color: \"red\",\n        onClick: () => setCommentToggle(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), single_post.comments.map(singleComment => {\n        console.log(user);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"single-comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => window.location = \"/profile/\" + singleComment.user._id,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: singleComment.user.profilePhoto,\n                alt: \"prodile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: singleComment.user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\": \", singleComment.comment]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), user.user._id === postUser._id || singleComment.user._id === postUser._id ? /*#__PURE__*/_jsxDEV(IoMdClose, {\n            onClick: () => deleteComment(singleComment)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 98\n          }, this) : false]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-header\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => window.location = \"/profile/\" + userPhoto._id,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: userPhoto.profilePhoto,\n          alt: \"profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: userPhoto.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: single_post.photo,\n        alt: \"profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reactions\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [!singlePost.likes.find(like => like === user.user._id) ? /*#__PURE__*/_jsxDEV(AiOutlineHeart, {\n          size: \"28px\",\n          onClick: () => like(single_post._id),\n          color: \"black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 69\n        }, this) : /*#__PURE__*/_jsxDEV(AiOutlineHeart, {\n          size: \"28px\",\n          onClick: () => like(single_post._id),\n          color: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FaRegCommentAlt, {\n          size: \"25px\",\n          onClick: () => setCommentToggle(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AiOutlineSend, {\n          size: \"28px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: comment,\n        onChange: e => setComment(e.target.value),\n        placeholder: \"Write comment...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => postComment(),\n        children: \"POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-comments\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-comment last-comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: single_post.comments.length > 0 ? post.comments[post.comments.length - 1].user.username : \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", post.comments.length > 0 ? \": \" + post.comments[post.comments.length - 1].comment : \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Post, \"QDbDzXftveHBgM9+3g2ES7zz6EM=\", false, function () {\n  return [useDispatch, useSpring, useSelector];\n});\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Desktop/React/social-network/client/src/components/Post/post.js"],"names":["AiOutlineHeart","AiOutlineSend","FaRegCommentAlt","IoMdClose","useState","axios","useSpring","animated","useDispatch","useSelector","Post","post","user","dispatch","props","single_post","likeTrigger","setLikeTrigger","comment","setComment","postid","then","res","data","token","localStorage","getItem","postComment","length","commObj","_id","date","Date","now","type","payload","put","deleteComment","comm","setCommentToggle","like","a","likes","find","id","userid","commentToggle","commentsStyle","display","postUser","JSON","parse","updatedPosts","store","posts","singlePost","photo","userPhoto","console","log","comments","map","singleComment","window","location","profilePhoto","username","e","target","value"],"mappings":"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","sourcesContent":["import \"./post.css\";\r\nimport { AiOutlineHeart,AiOutlineSend} from \"react-icons/ai\";\r\nimport {FaRegCommentAlt} from \"react-icons/fa\";\r\nimport {IoMdClose} from \"react-icons/io\";\r\nimport {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useSpring,animated} from \"react-spring\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\n\r\nexport default function Post({post,user,dispatch},props){\r\n    let single_post;\r\n    const [likeTrigger,setLikeTrigger]=useState(false);\r\n    const [comment,setComment]=useState();\r\n    dispatch=useDispatch();\r\n    if(!post){\r\n        axios.post(\"/api/posts/getpost\",{\r\n            postid:\"61154bb9c115b226b8d762bc\"\r\n        })\r\n        .then(res=>{\r\n            \r\n            single_post=res.data;\r\n            \r\n        });\r\n        const token=localStorage.getItem(\"token\");\r\n        user=token.user;\r\n        \r\n    }\r\n\r\n\r\n    function postComment(){\r\n        if(typeof(comment)===\"string\" && comment.length>0){\r\n            let commObj={\r\n                postid:single_post._id,        \r\n                user:user.user,\r\n                comment:comment,\r\n                date:Date.now()\r\n            }\r\n            \r\n            dispatch({type:\"ADDCOMMENT\",payload:commObj});\r\n            axios.put(\"/api/posts/postcomment\",commObj);\r\n\r\n            setComment(\"\");\r\n        }\r\n    \r\n    }\r\n      function deleteComment(comm){\r\n        dispatch({type:\"DELETECOMMENT\",payload:comm});\r\n        axios.put(\"/api/posts/deletecomment\",comm)\r\n        setCommentToggle(false);\r\n\r\n    }\r\n\r\n    function like(postid){\r\n        let a=single_post.likes.find(id=>id===user.user._id);\r\n        if(!a){\r\n            axios.put(\"/api/posts/like\",{\r\n                postid:postid,\r\n                userid:user.user._id\r\n            })\r\n            dispatch({type:\"LIKE\",payload:{userid:user.user._id,postid:postid}});\r\n            setLikeTrigger(!likeTrigger)\r\n        }else{\r\n            axios.put(\"/api/posts/unlike\",{\r\n                postid:postid,\r\n                userid:user.user._id\r\n            })\r\n            dispatch({type:\"UNLIKE\",payload:{postid:postid,userid:user.user._id}});\r\n            setLikeTrigger(!likeTrigger)\r\n           \r\n        }\r\n\r\n    }\r\n    const [commentToggle,setCommentToggle]=useState(false)\r\n    const commentsStyle=useSpring(commentToggle ? {display:\"block\"}:{display:\"none\"});\r\n    let postUser=JSON.parse(single_post.user)\r\n \r\n    let updatedPosts=useSelector(store=>store.posts);\r\n    let singlePost=updatedPosts.find(photo=>photo._id===single_post._id);\r\n\r\n    \r\n    const userPhoto=JSON.parse(single_post.user);\r\n    console.log(userPhoto);\r\n    return <div className=\"post\">\r\n        \r\n       <animated.div className=\"all-comments\" style={commentsStyle}>\r\n            <IoMdClose size=\"32px\" color=\"red\" onClick={()=>setCommentToggle(false)}/>\r\n           \r\n            {single_post.comments.map(singleComment=>{\r\n                 console.log(user)\r\n            return  <div className=\"single-comment\">\r\n                        <span>\r\n                            <span onClick={()=>window.location=\"/profile/\"+singleComment.user._id}>\r\n                                <img src={singleComment.user.profilePhoto} alt=\"prodile\"/>\r\n                                <h4>{singleComment.user.username}</h4>\r\n                            </span>\r\n                            \r\n                            <p>: {singleComment.comment}</p>\r\n                        </span>\r\n                        {user.user._id===postUser._id || singleComment.user._id===postUser._id ? <IoMdClose onClick={()=>deleteComment(singleComment)}/>:false}\r\n                    </div>\r\n            })}\r\n           \r\n            </animated.div>\r\n\r\n\r\n        <div className=\"post-header\">\r\n            <span onClick={()=>window.location=\"/profile/\"+userPhoto._id}>\r\n                <img src={userPhoto.profilePhoto} alt=\"profile\"/>\r\n                <h3>{userPhoto.username}</h3>\r\n            </span>\r\n            \r\n        </div>\r\n        <div className=\"image-container\">\r\n            <img src={single_post.photo} alt=\"profile\"/>\r\n        </div>\r\n        <div className=\"reactions\">\r\n            <span>\r\n                {!singlePost.likes.find(like=>like===user.user._id)?<AiOutlineHeart size=\"28px\" onClick={()=>like(single_post._id)} color=\"black\"/>:\r\n                <AiOutlineHeart size=\"28px\" onClick={()=>like(single_post._id)} color=\"red\"/>}\r\n                <FaRegCommentAlt size=\"25px\" onClick={()=>setCommentToggle(true)}/>\r\n                <AiOutlineSend size=\"28px\"/>\r\n            </span>\r\n\r\n        </div>\r\n        <div className=\"comment\">\r\n            <textarea value={comment} onChange={e=>setComment(e.target.value)} placeholder=\"Write comment...\"/>\r\n            <button onClick={()=>postComment()}>POST</button>\r\n        </div>\r\n        <div className=\"post-comments\">\r\n            <div className=\"single-comment last-comment\">\r\n                <h4>{single_post.comments.length>0 ? post.comments[post.comments.length-1].user.username:\" \"}</h4>\r\n                <p> {post.comments.length>0 ? \": \"+post.comments[post.comments.length-1].comment:\" \"}</p>\r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}