{"ast":null,"code":"export default function postReducer(state = [], action) {\n  switch (action.type) {\n    case \"LOAD\":\n      return state = action.payload;\n\n    case \"ADDCOMMENT\":\n      let post = state.find(photo => photo._id === action.payload.postid);\n      post.comments.push(action.payload);\n      return state;\n\n    case \"DELETECOMMENT\":\n      let postD = state.find(photo => photo._id === action.payload.postid);\n      let comments = postD.comments.filter(comm => comm.comment !== action.payload.comment);\n      postD.comments = comments;\n      return state;\n\n    case \"LIKE\":\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Desktop/React/social-network/client/src/reducers/postReducer.js"],"names":["postReducer","state","action","type","payload","post","find","photo","_id","postid","comments","push","postD","filter","comm","comment"],"mappings":"AACA,eAAe,SAASA,WAAT,CAAqBC,KAAK,GAAC,EAA3B,EAA8BC,MAA9B,EAAqC;AAChD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,MAAL;AACI,aAAOF,KAAK,GAACC,MAAM,CAACE,OAApB;;AACJ,SAAK,YAAL;AACI,UAAIC,IAAI,GAACJ,KAAK,CAACK,IAAN,CAAWC,KAAK,IAAEA,KAAK,CAACC,GAAN,KAAYN,MAAM,CAACE,OAAP,CAAeK,MAA7C,CAAT;AACAJ,MAAAA,IAAI,CAACK,QAAL,CAAcC,IAAd,CAAmBT,MAAM,CAACE,OAA1B;AACA,aAAOH,KAAP;;AACJ,SAAK,eAAL;AACI,UAAIW,KAAK,GAACX,KAAK,CAACK,IAAN,CAAWC,KAAK,IAAEA,KAAK,CAACC,GAAN,KAAYN,MAAM,CAACE,OAAP,CAAeK,MAA7C,CAAV;AACA,UAAIC,QAAQ,GAACE,KAAK,CAACF,QAAN,CAAeG,MAAf,CAAsBC,IAAI,IAAEA,IAAI,CAACC,OAAL,KAAeb,MAAM,CAACE,OAAP,CAAeW,OAA1D,CAAb;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAeA,QAAf;AACA,aAAOT,KAAP;;AAEJ,SAAK,MAAL;AACA;AACI,aAAOA,KAAP;AAfR;AAiBH","sourcesContent":["\r\nexport default function postReducer(state=[],action){\r\n    switch(action.type){\r\n        case \"LOAD\":\r\n            return state=action.payload;\r\n        case \"ADDCOMMENT\":\r\n            let post=state.find(photo=>photo._id===action.payload.postid);\r\n            post.comments.push(action.payload);\r\n            return state; \r\n        case \"DELETECOMMENT\":\r\n            let postD=state.find(photo=>photo._id===action.payload.postid);\r\n            let comments=postD.comments.filter(comm=>comm.comment!==action.payload.comment);\r\n            postD.comments=comments;\r\n            return state;\r\n\r\n        case \"LIKE\":\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}