{"ast":null,"code":"export default function postReducer(state = [], action) {\n  switch (action.type) {\n    case \"LOADPOST\":\n      state = action.payload;\n      return state;\n\n    case \"LOAD\":\n      state = action.payload;\n      return state;\n\n    case \"ADDCOMMENT\":\n      let post = state.find(photo => photo._id === action.payload.postid);\n      post.comments.push(action.payload);\n      return state;\n\n    case \"DELETECOMMENT\":\n      let postD = state.find(photo => photo._id === action.payload.postid);\n      let comments = postD.comments.filter(comm => comm.comment !== action.payload.comment);\n      postD.comments = comments;\n      return state;\n\n    case \"LIKE\":\n      if (typeof state === \"object\") {\n        state.likes.push(action.payload.userid);\n        return state;\n      } else {}\n\n    case \"UNLIKE\":\n      if (typeof state === \"object\") {\n        let likes = state.likes.filter(like => like !== action.payload.userid);\n        unlikedPost.likes = likes;\n        return state;\n      } else {\n        let unlikedPost = state.find(photo => photo._id === action.payload.postid);\n        let likes = unlikedPost.likes.filter(like => like !== action.payload.userid);\n        unlikedPost.likes = likes;\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Desktop/React/social-network/client/src/reducers/postReducer.js"],"names":["postReducer","state","action","type","payload","post","find","photo","_id","postid","comments","push","postD","filter","comm","comment","likes","userid","like","unlikedPost"],"mappings":"AACA,eAAe,SAASA,WAAT,CAAqBC,KAAK,GAAC,EAA3B,EAA8BC,MAA9B,EAAqC;AAChD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,UAAL;AACIF,MAAAA,KAAK,GAACC,MAAM,CAACE,OAAb;AACA,aAAOH,KAAP;;AACJ,SAAK,MAAL;AACIA,MAAAA,KAAK,GAACC,MAAM,CAACE,OAAb;AACA,aAAOH,KAAP;;AACJ,SAAK,YAAL;AACI,UAAII,IAAI,GAACJ,KAAK,CAACK,IAAN,CAAWC,KAAK,IAAEA,KAAK,CAACC,GAAN,KAAYN,MAAM,CAACE,OAAP,CAAeK,MAA7C,CAAT;AACAJ,MAAAA,IAAI,CAACK,QAAL,CAAcC,IAAd,CAAmBT,MAAM,CAACE,OAA1B;AACA,aAAOH,KAAP;;AACJ,SAAK,eAAL;AACI,UAAIW,KAAK,GAACX,KAAK,CAACK,IAAN,CAAWC,KAAK,IAAEA,KAAK,CAACC,GAAN,KAAYN,MAAM,CAACE,OAAP,CAAeK,MAA7C,CAAV;AACA,UAAIC,QAAQ,GAACE,KAAK,CAACF,QAAN,CAAeG,MAAf,CAAsBC,IAAI,IAAEA,IAAI,CAACC,OAAL,KAAeb,MAAM,CAACE,OAAP,CAAeW,OAA1D,CAAb;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAeA,QAAf;AACA,aAAOT,KAAP;;AAEJ,SAAK,MAAL;AACI,UAAG,OAAOA,KAAP,KAAgB,QAAnB,EAA4B;AACxBA,QAAAA,KAAK,CAACe,KAAN,CAAYL,IAAZ,CAAiBT,MAAM,CAACE,OAAP,CAAea,MAAhC;AACA,eAAOhB,KAAP;AACH,OAHD,MAGK,CAEJ;;AAEL,SAAK,QAAL;AACI,UAAG,OAAOA,KAAP,KAAgB,QAAnB,EAA4B;AACxB,YAAIe,KAAK,GAACf,KAAK,CAACe,KAAN,CAAYH,MAAZ,CAAmBK,IAAI,IAAEA,IAAI,KAAGhB,MAAM,CAACE,OAAP,CAAea,MAA/C,CAAV;AACAE,QAAAA,WAAW,CAACH,KAAZ,GAAkBA,KAAlB;AACA,eAAOf,KAAP;AACH,OAJD,MAIK;AACD,YAAIkB,WAAW,GAAClB,KAAK,CAACK,IAAN,CAAWC,KAAK,IAAEA,KAAK,CAACC,GAAN,KAAYN,MAAM,CAACE,OAAP,CAAeK,MAA7C,CAAhB;AACA,YAAIO,KAAK,GAACG,WAAW,CAACH,KAAZ,CAAkBH,MAAlB,CAAyBK,IAAI,IAAEA,IAAI,KAAGhB,MAAM,CAACE,OAAP,CAAea,MAArD,CAAV;AACAE,QAAAA,WAAW,CAACH,KAAZ,GAAkBA,KAAlB;AACA,eAAOf,KAAP;AACH;;AAEL;AACI,aAAOA,KAAP;AAtCR;AAwCH","sourcesContent":["\r\nexport default function postReducer(state=[],action){\r\n    switch(action.type){\r\n        case \"LOADPOST\":\r\n            state=action.payload;\r\n            return state;\r\n        case \"LOAD\":\r\n            state=action.payload;\r\n            return state;\r\n        case \"ADDCOMMENT\":\r\n            let post=state.find(photo=>photo._id===action.payload.postid);\r\n            post.comments.push(action.payload);\r\n            return state; \r\n        case \"DELETECOMMENT\":\r\n            let postD=state.find(photo=>photo._id===action.payload.postid);\r\n            let comments=postD.comments.filter(comm=>comm.comment!==action.payload.comment);\r\n            postD.comments=comments;\r\n            return state;\r\n\r\n        case \"LIKE\":\r\n            if(typeof(state)===\"object\"){\r\n                state.likes.push(action.payload.userid);\r\n                return state;\r\n            }else{\r\n\r\n            }\r\n\r\n        case \"UNLIKE\":\r\n            if(typeof(state)===\"object\"){\r\n                let likes=state.likes.filter(like=>like!==action.payload.userid);\r\n                unlikedPost.likes=likes;\r\n                return state;\r\n            }else{\r\n                let unlikedPost=state.find(photo=>photo._id===action.payload.postid);\r\n                let likes=unlikedPost.likes.filter(like=>like!==action.payload.userid);\r\n                unlikedPost.likes=likes;\r\n                return state;\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}